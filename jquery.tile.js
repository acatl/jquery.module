// Generated by CoffeeScript 1.3.3

/*
    jquery.tile.js

    Copyright 2012, Acatl Pacheco
    Licensed under the MIT License.
*/


(function() {

  (function($, window) {
    var Plugin, getNS, pluginName;
    pluginName = "tile";
    getNS = function(namespaceStr) {
      var currNSObj, i, splitNS, splitNSLength;
      splitNS = namespaceStr.split(".");
      currNSObj = window;
      splitNSLength = void 0;
      i = void 0;
      i = 0;
      splitNSLength = splitNS.length;
      while (i < splitNSLength && (currNSObj != null)) {
        currNSObj = (currNSObj[splitNS[i]] = currNSObj[splitNS[i]] || null);
        i++;
      }
      return currNSObj;
    };
    Plugin = function(element, options) {
      this.element = $(element);
      this.options = options;
      this._name = pluginName;
      this.init();
      return this;
    };
    Plugin.prototype.init = function() {
      var $el, nsObject, tileClass;
      $el = this.element;
      tileClass = $el.data("tile-class");
      if (tileClass) {
        nsObject = getNS(tileClass);
        try {
          return nsObject($el, this.options);
        } catch (e) {
          return console.log("Tile error on: [" + tileClass + "]", e);
        }
      }
    };
    return $.fn[pluginName] = function(options) {
      var callArgs;
      callArgs = arguments;
      return this.each(function() {
        var pluginInstance;
        pluginInstance = $.data(this, "plugin_" + pluginName);
        if (pluginInstance) {
          if (pluginInstance[options]) {
            return pluginInstance[options].apply(pluginInstance, Array.prototype.slice.call(callArgs, 1));
          }
        } else {
          return $.data(this, "plugin_" + pluginName, new Plugin(this, options));
        }
      });
    };
  })(jQuery, window);

}).call(this);
